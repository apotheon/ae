= RELEASE HISTORY

== 1.6.1 / 2010-11-05

This release has test passing for Ruby 1.9.2. Ruby 1.9.2 doesn't appear
to like &block and block_given? to be used in same method scope. It
may be a Ruby bug, nonetheless AE has been adjusted to circumvent the
problem.

Changes:

* Use `&block` and not `block_given?`.


== 1.6.0 / 2010-11-04

Support libraries defining toplevel methods, such as `legacy.rb`, now place
their methods in AE::World module instead of Object. AE::World needs to
to be included in the context desired for the testing framework used. This
is important to prevent polution of the the Object namespace.

Changes:

* Toplevel extras are defined in AE::World instead of Object.
* In dot.rb #true/#false methods renamed to `#true!`/`#false!`.
* In dot.rb `#true!`/`#false!` methods can take an error or error message.


== 1.5.0 / 2010-09-06

This release adds adapters for TestUnit, MiniTest and RSpec. AE worked with
them previously but AE assertions were seen as errors rather than nice
assertions. Likewise assertion counts were off in the final tally. These
adapters insert AE's counts so the the tally's are correct.

In addition to this the Assertion class itself now acts as the final end
point for all assertions, which makes for a very clean interface.

Changes:

* Add adapters for TestUnit, MiniTest and RSpec.
* Move final assertion call to Assertion#test.


== 1.4.0 / 2010-09-02

Version 1.4 brings Ruby 1.9 compatibility. The Assertor class is now a
subclass of BasicObject. This fixes an issues Assertor would had
applying to methods defined both in a class and Kernel.

Changes:

* Assertor is a subclass of BasicObject.
* Use custom BasicObject when using Ruby 1.8.
* Add #assert= which works like `assert ==`.
* Add #refute= which works like `refute ==`.


== 1.3.0 / 2010-06-17

New release of AE adds support for RSpec-style matchers. This means
it should be usable with Shoulda 3.0 and any other matchers library.
This release also cleans up the underlying code, which is now
extremely clean. Lastly a smal API change allows #asser to compare
it's argument to the return of it's block using #==, just as #expect
does using #===.

Changes:

* Add RSpec-style matchers support.
* Move #expect code to Assertor.
* #assert method can do equality camparison.


== 1.2.3 / 2010-06-07

This release is a quick fix, which adds a missing `require 'yaml'`.

Changes:

* Add missing require 'yaml'.


== 1.2.2 / 2010-06-06

Version 1.2.2 simply add one new feature --the ability to
use 'object.assert = other' instead of 'object.assert == other'.
This was added simply becuase I found I often made the mistake
of a missing '=', and since #assert= has no definition, there
was no reason not to have behave accordingly.

Also note that I switched the license from LGPL to MIT.
With regards to reusable libraries and I moving all my
work, such that I am able, to MIT to maximize free usage.

Changes:

* Add `#assert=` method as a shortcut for `#assert ==`.
* Now distributed under MIT license.


== 1.2.0 / 2010-01-27

This release fixes '=~' assertions and now requires the
ae/expect library by default.

Changes:

* Expect method is now loaded by default when requiring 'ae'.
* Fixed bug where #=~ did not work correctly against Assertor.


== 1.1.0 / 2009-09-06

This release provided two major imporvements. The first is
the #expect method which is similar to #assert, but uses 
case equality (#===) for comparison. And second, an optional
library <tt>ae/legacy.rb<tt>, is has been added that provides
backward compatibility with Test::Unit assertions, should it
be needed.

Changes:

* New #expect method.
* Proved legacy assertion in optional ae/legacy.rb library.
* Added backtrace parameter to flunk calls.


== 1.0.0 / 2009-09-03

This is the initial release of AE.

Changes:

* Happy Birthday!

